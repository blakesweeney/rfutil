/*
 * OLS Service
 *
 * REST API for OLS
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PagedModelV1Term {
    #[serde(rename = "links", skip_serializing_if = "Option::is_none")]
    pub links: Option<Vec<models::Link>>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<models::V1Term>>,
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<Box<models::PageMetadata>>,
}

impl PagedModelV1Term {
    pub fn new() -> PagedModelV1Term {
        PagedModelV1Term {
            links: None,
            content: None,
            page: None,
        }
    }
}

