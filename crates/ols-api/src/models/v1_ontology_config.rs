/*
 * OLS Service
 *
 * REST API for OLS
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1OntologyConfig {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "versionIri", skip_serializing_if = "Option::is_none")]
    pub version_iri: Option<String>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "preferredPrefix", skip_serializing_if = "Option::is_none")]
    pub preferred_prefix: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "mailingList", skip_serializing_if = "Option::is_none")]
    pub mailing_list: Option<String>,
    #[serde(rename = "tracker", skip_serializing_if = "Option::is_none")]
    pub tracker: Option<String>,
    #[serde(rename = "logo", skip_serializing_if = "Option::is_none")]
    pub logo: Option<String>,
    #[serde(rename = "creators", skip_serializing_if = "Option::is_none")]
    pub creators: Option<Vec<String>>,
    #[serde(rename = "annotations", skip_serializing_if = "Option::is_none")]
    pub annotations: Option<serde_json::Value>,
    #[serde(rename = "fileLocation", skip_serializing_if = "Option::is_none")]
    pub file_location: Option<String>,
    #[serde(rename = "oboSlims", skip_serializing_if = "Option::is_none")]
    pub obo_slims: Option<bool>,
    #[serde(rename = "labelProperty", skip_serializing_if = "Option::is_none")]
    pub label_property: Option<String>,
    #[serde(rename = "definitionProperties", skip_serializing_if = "Option::is_none")]
    pub definition_properties: Option<Vec<String>>,
    #[serde(rename = "synonymProperties", skip_serializing_if = "Option::is_none")]
    pub synonym_properties: Option<Vec<String>>,
    #[serde(rename = "hierarchicalProperties", skip_serializing_if = "Option::is_none")]
    pub hierarchical_properties: Option<Vec<String>>,
    #[serde(rename = "baseUris", skip_serializing_if = "Option::is_none")]
    pub base_uris: Option<Vec<String>>,
    #[serde(rename = "hiddenProperties", skip_serializing_if = "Option::is_none")]
    pub hidden_properties: Option<Vec<String>>,
    #[serde(rename = "preferredRootTerms", skip_serializing_if = "Option::is_none")]
    pub preferred_root_terms: Option<Vec<String>>,
    #[serde(rename = "isSkos", skip_serializing_if = "Option::is_none")]
    pub is_skos: Option<bool>,
    #[serde(rename = "allowDownload", skip_serializing_if = "Option::is_none")]
    pub allow_download: Option<bool>,
}

impl V1OntologyConfig {
    pub fn new() -> V1OntologyConfig {
        V1OntologyConfig {
            id: None,
            version_iri: None,
            namespace: None,
            preferred_prefix: None,
            title: None,
            description: None,
            homepage: None,
            version: None,
            mailing_list: None,
            tracker: None,
            logo: None,
            creators: None,
            annotations: None,
            file_location: None,
            obo_slims: None,
            label_property: None,
            definition_properties: None,
            synonym_properties: None,
            hierarchical_properties: None,
            base_uris: None,
            hidden_properties: None,
            preferred_root_terms: None,
            is_skos: None,
            allow_download: None,
        }
    }
}

