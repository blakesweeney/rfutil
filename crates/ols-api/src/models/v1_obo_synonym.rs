/*
 * OLS Service
 *
 * REST API for OLS
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1OboSynonym {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "xrefs", skip_serializing_if = "Option::is_none")]
    pub xrefs: Option<Vec<models::V1OboXref>>,
}

impl V1OboSynonym {
    pub fn new() -> V1OboSynonym {
        V1OboSynonym {
            name: None,
            scope: None,
            r#type: None,
            xrefs: None,
        }
    }
}
